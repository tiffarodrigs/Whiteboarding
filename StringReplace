// Question #1: Turning Strings to URLs
// URLs cannot have spaces. Instead, all spaces in a string are replaced with %20. Write an algorithm that replaces all spaces in a string with %20.

// You may not use the replace() method or regular expressions to solve this problem. Solve the problem with and without recursion.

// Example
// Input: "Jasmine Ann Jones"

// Output: "Jasmine%20Ann%20Jones"

///implement with reduce-WIP
function StrReplace(input)
{
  let wordArray = input.split(" ")
  const output =wordArray.reduce((prevVal,currVal,CurrIndex)=>
  {
    if( CurrIndex != wordArray.length-1)
    {
      prevVal= prevVal + currVal.concat("%20");
    }
    else
    {
      prevVal = prevVal+ currVal ;
    }
    return prevVal
  },"");
  console.log ("output : "+output);
}
StrReplace("Jasmine Ann Jones");
///implement with for
function StrReplace(input)
{
  let wordArray = input.split(" ")
  let output="";
  if(NaN){
    return "Enter a string";
  }
  for (let i=0;i<wordArray.length;i++)
  {   
    if(i!=(wordArray.length-1) )
    {
    output = output+ wordArray[i].concat("%20");
    }
    else
    {
      output =  output + wordArray[i];
    }    
  }
  return output
}
StrReplace("Jasmine Ann Jones");

  //String.prototype.padEnd();
//using recursive
function StrReplace(input)
{
  let wordArray = input.split(" ")
  let poppedWord=wordArray.pop()
  let output="";
  if (input=="")
  {
    return "";
  }
  if((input.split(" ")).length ==1)
  {
  return input
  }
  else{
  output=`${StrReplace(wordArray.join(" "))}`+`2%${poppedWord}`
  }
  return output
}